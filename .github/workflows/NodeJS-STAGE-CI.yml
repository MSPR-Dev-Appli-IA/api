# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI PR

on:
  pull_request:
    branches: [ "stage" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 16.14.2 ]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: Install Npm dependencies
        run: npm ci
      - name: Export Secrets
        run: export API_KEY="${{ secrets.API_KEY }}" && eexport DATABASE_URL=\"mongodb://${{ secrets.DB_USER_STAGE }}:${{ secrets.DB_PASSWD_STAGE }}@${{ secrets.DB_HOST }}:${{ secrets.DB_PORT_STAGE }}/?authMechanism=DEFAULT\"
      - name: Create env.ts for test
        run: echo "JWTKEY=$API_KEY" >> env.ts && echo "" >> env.ts

  coverage:
    name: Test with Node.js ${{ matrix.node-version }}
    runs-on: ubuntu-latest
    env:
      NODE_ENV: ${{ secrets.NODE_ENV }}
    steps:
      - uses: actions/checkout@v3
      - uses:
          ArtiomTr/jest-coverage-report-action@v2:

  docker:
    name: Build and Push Image On Harbor
    runs-on: ubuntu-latest
    steps:
      - uses: docker/login-action@v1
        with:
          registry: ${{ secrets.REGISTRY_URL }}
          username: ${{ secrets.REGISTRY_USER }}
          password: ${{ secrets.REGISTRY_PASSWD }}

      - uses: actions/checkout@v3
      - name: BuildAndPushImageOnHarbor
        run: |
          docker build ./ -t ${{ secrets.REGISTRY_URL }}:${{ secrets.REGISTRY_PORT }}/arosaje-backend/arosaje-api-stage:${{ github.run_number }}
          docker push ${{ secrets.REGISTRY_URL }}:${{ secrets.REGISTRY_PORT }}/arosaje-backend/arosaje-api-stage:${{ github.run_number }}
  sonar:
    name: SonarQube Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      # If you wish to fail your job when the Quality Gate is red, uncomment the
      # following lines. This would typically be used to fail a deployment.
      - uses: sonarsource/sonarqube-quality-gate-action@master
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  release:
    name: Generate or Update CHANGELOG.md
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Update CHANGELOG
        id: changelog
        uses: requarks/changelog-action@v1
        with:
          token: ${{ github.token }}
          tag: ${{ github.ref_name }}

      - name: Create Release
        uses: ncipollo/release-action@v1.12.0
        with:
          allowUpdates: true
          draft: false
          makeLatest: true
          name: ${{ github.ref_name }}
          body: ${{ steps.changelog.outputs.changes }}
          token: ${{ github.token }}

      - name: Commit CHANGELOG.md
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          branch: ${{ github.ref_name }}
          commit_message: 'docs: update CHANGELOG.md for ${{ github.ref_name }} [skip ci]'
          file_pattern: CHANGELOG.md