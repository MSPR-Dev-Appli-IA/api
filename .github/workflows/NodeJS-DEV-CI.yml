# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI PR

on:
  pull_request:
    branches: [ "develop" ]

jobs:
  build:
    name: Setup Node.js ${{ matrix.node-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 16.14.2 ]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: Install Npm dependencies
        run: npm ci
      - name: Export Secrets
        run: export API_KEY="${{ secrets.API_KEY }}" && export DB_HOST="${{ secrets.DB_HOST }}" && export DB_PORT="${{ secrets.DB_PORT_DEV }}" && export DB_USER="${{ secrets.DB_USER_DEV }}" && export DB_PASSWD="${{ secrets.DB_PASSWD_DEV }}"
      - name: Create .env for test
        run: echo "JWTKEY=$API_KEY" >> .env && echo "DATABASE_URL=\"mongodb://$DB_USER:$DB_PASSWD@$DB_HOST:$DB_PORT_DEV/?authMechanism=DEFAULT\"" >> .env

  coverage:
    name: Test with Node.js ${{ matrix.node-version }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ArtiomTr/jest-coverage-report-action@v2

  sonar:
    name: SonarQube Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      # If you wish to fail your job when the Quality Gate is red, uncomment the
      # following lines. This would typically be used to fail a deployment.
      - uses: sonarsource/sonarqube-quality-gate-action@master
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}